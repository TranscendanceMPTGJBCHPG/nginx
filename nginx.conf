user  nginx;
worker_processes  1;

events {
    worker_connections 1024;
}

http {

    resolver 127.0.0.11 valid=30s;  # Adresse IP du DNS interne de Docker

    map $http_origin $cors_origin {
        default "";
        "http://localhost:7777" $http_origin;
        "http://10.19.239.226:7777" $http_origin;
        "~^http://192\.168\.\d+\.\d+:7777$" $http_origin;  # Pour les IPs locales
        "~^http://10\.\d+\.\d+\.\d+:7777$" $http_origin;   # Pour les IPs en 10.x.x.x
    }

    server {
        listen 7777;
        server_name _;  # Accepte toutes les requêtes, quel que soit le nom d'hôte




        # Configuration CORS globale
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-CSRFToken' always;

        # Gestion des requêtes OPTIONS (pre-flight)
        if ($request_method = 'OPTIONS') {
            return 204;
        }
#         add_header 'Access-Control-Allow-Origin' '$http_origin' always;
#         if ($http_origin ~* (https?://.*\.yourdomain\.com(:[0-9]+)?$)) {
#             add_header 'Access-Control-Allow-Origin' "$http_origin" always;
#         }


#        add_header 'Access-Control-Allow-Origin' 'http://localhost:7777' always;

#
#         add_header 'Access-Control-Allow-Credentials' 'true' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
#         add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-CSRFToken' always;

        location / {
            proxy_pass http://frontend_client:5173;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ /ws/pong/([a-zA-Z0-9-]+)/ {

            set $upstream_server server:8000;
            proxy_pass http://$upstream_server/ws/pong/$1/;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /game/tournament/ {

            proxy_pass http://matchmaking:8001/game/tournament/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /game/new/ {
            proxy_pass http://matchmaking:8001/game/new/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}